name: SonarQube Scan (Maven)

on:
  push:
    branches:
      - master
jobs:
  sonarqube:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{runner.os}}-m2-${{ hashFiles('**/pom.xml')}}
          restore-keys: |
            ${{runner.os}}-m2

      - name: Build with Maven and run SonarQube analysis
        run: | 
         mvn clean verify sonar:sonar \
         -Dsonar.host.url=${{secrets.SONAR_HOST_URL}} \
         -Dsonar.login=${{secrets.SONAR_TOKEN}} \
         -Dsonar.projectKey=train-ticket-reservation
        
        #Deploy WAR to Tomcat  
      - name: Deploy to tomcat
        run: |
               curl -v -u ${{secrets.TOMCAT_USER}}:${{secrets.TOMCAT_PASSWORD}} \
                  -T target/TrainBook-1.0.0-SNAPSHOT.war \
                  "http://${{secrets.TOMCAT_HOST}}:8080/manager/text/deploy?path=/TrainBook&update=true"

      - name: set up snyk cli
        uses: snyk/actions/setup@master
      - name: run snyk test
        run: snyk test --all-projects --severity-threshold=high --json-file-output=snyk-report.json//true
        env: 
          SNKY_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: run snyk monitor
        uses: snyk/actions/maven@master
        with: 
          command: monitor
          args: --file=pom.xml
        env: 
         JAVA_HOME: /opt/java/open jdk
         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} 
         
